datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  USER
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id                    String     @id @default(cuid())
  email                 String     @unique
  name                  String?
  password              String?
  emailVerified         DateTime?
  image                 String?
  role                  UserRole   @default(USER)
  accounts              Account[]
  isTwoFactorEnabled    Boolean @default(false)
  towFactorConfirmation TowFactorConfirmation?
}

model VerificationToken {
  id         String     @id @default(cuid())
  email      String     @unique
  token      String     @unique
  expires    DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String     @id @default(cuid())
  email   String     @unique
  token   String     @unique
  expires DateTime

  @@unique([email, token])
}

model TowFactorToken {
  id      String     @id @default(cuid())
  email   String     @unique
  token   String     @unique
  expires DateTime

  @@unique([email, token])
}

model TowFactorConfirmation {
  id      String  @id @default(cuid())
  userId  String  
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)


  @@unique([userId])
}
